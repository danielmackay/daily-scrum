@page "/daily-scrum/preview"
@using MediatR
@using WebUI.Features.DailyScrum.Components
@using Microsoft.AspNetCore.Components.Web
@using WebUI.Features.DailyScrum.Queries
@inject ISender Sender

<PageTitle>Daily Scrum</PageTitle>

<h1>Daily Scrum - Preview</h1>

@if (_viewModel is not null)
{
    <div class="email-metadata">
        <p>
            <strong>Subject:</strong> @_viewModel.Email.Subject
        </p>
        <p>
            <strong>To:</strong> @_viewModel.Email.To.Email
        </p>
        <p>
            <strong>CC:</strong>
            @foreach (var cc in _viewModel.Email.Cc)
            {
                @(cc.Email + ",")
            }
        </p>
    </div>

    <div class="email-body">
        <p>
            <strong>Body:</strong>
        </p>

        <Heading Text="Hi SSWBenchMasters,"/>

        <Summary ViewModel="_viewModel.UserSummary"/>

        <Heading Text="Yesterday I worked on:"/>

        <TaskList Projects="_viewModel.YesterdaysProjects"/>

        <Heading Text="Today I'm working on:"/>

        <TaskList Projects="_viewModel.TodaysProjects"/>

        <p>
            &lt;This email was sent as per <a href="https://my.sugarlearning.com/SSW/items/8291">https://my.sugarlearning.com/SSW/items/8291</a> /&gt;
        </p>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [SupplyParameterFromQuery]
    public string Name { get; set; } = string.Empty;

    [SupplyParameterFromQuery]
    public int? ClientDays { get; set; }

    [SupplyParameterFromQuery]
    public DateOnly LastWorkingDay { get; set; }


    // [SupplyParameterFromQuery(Name = "generate")]
    // public DailyScrumInputModel InputModel { get; set; } = new DailyScrumInputModel();

    private DailyScrumViewModel? _viewModel;

    protected override async Task OnInitializedAsync()
    {
        var query = new GetDailyScrumQuery(Name, ClientDays, LastWorkingDay);
        _viewModel = await Sender.Send(query);
        await base.OnInitializedAsync();
    }

}
